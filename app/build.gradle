ext.mainApp = true //如果此module为主app module，一直以application方式编译，则启用这一行
//ext.alwaysLib = true //如果此module为基础库，一直以library方式编译，则启用这一行
apply from: rootProject.file('cc-settings-demo.gradle')
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.future_education.teacher"
        minSdk rootProject.ext.android.minSdkVersion
        targetSdk rootProject.ext.android.targetSdkVersion
        versionCode 11
        versionName "2.0.8"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            //设置支持的SO库架构
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'armeabi', 'x86'

        }
    }

    signingConfigs {
        wljydebug {
            keyAlias = 'future_education'
            storeFile file('../app/future_education.jks')
            storePassword '123456'
            keyPassword '123456'
        }

    }
    buildTypes {
        release {
            minifyEnabled true // 是否开启混淆，开启之后不能debug
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.wljydebug // 配置release包的签名
        }
        debug {
            signingConfig signingConfigs.wljydebug // 配置debug包的签名
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all {

                if (variant.buildType.name == 'release') {
                    def productVersion = "Jiaoshiduan" + releaseTime() + "V" + defaultConfig.versionName + "_Release.apk";
                    outputFileName = productVersion
                } else if (variant.buildType.name == 'debug') {
                    def productVersion = "Jiaoshiduan" + releaseTime() + "V" + defaultConfig.versionName + "_Debug.apk";
                    outputFileName = productVersion
                }
            }
        }
    }


    buildFeatures {
        dataBinding  true
    }
    dataBinding {
        enabled  true
    }
    viewBinding {
        enabled  true
    }
    compileOptions {
        sourceCompatibility 11
        targetCompatibility 11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    lintOptions {
        checkDependencies true
        checkReleaseBuilds false
        abortOnError false
    }

    sourceSets {
        main.jniLibs.srcDirs = ['libs']
    }

    dexOptions {
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "8g"//越大越好
        incremental true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES' // will not include DEPENDENCIES file
    }
    configurations {
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }
}
//打包的时间
static def releaseTime() {
    return new Date().format("MM月dd日HH时mm分", TimeZone.getTimeZone("GMT+8"))
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    api rootProject.ext.dependencies.androidx
    api rootProject.ext.dependencies.constraintlayout
    implementation project(path: ':commonlibrary')
    addComponent "loginmodule"
    addComponent "homework"
    addComponent "learningcondition"
    addComponent"assistant"
    addComponent"person"
    kapt rootProject.ext.dependencies.annotationProcessor
    annotationProcessor rootProject.ext.dependencies.annotationProcessor
}